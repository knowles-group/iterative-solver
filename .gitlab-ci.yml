stages:
  - image
  - test
  - deploy
cache:
  key: ${CI_PROJECT_NAME}
  paths:
    - public

build-image:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  timeout: 3h
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:latest
  stage: image
  only:
    refs:
      - master
    changes:
      - Dockerfile
      - .gitlab-ci.yml

build100:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:latest
  #  tags:
  #    - linux-farm
  rules:
    - when: never # TODO complete Fortran Serial implementation
  timeout: 60m
  script:
    - BUILDTYPE=Release
    - BUILD=build/FORTRAN=1/MPI=0/PPIDD=0 ; mkdir -p $BUILD && cd $BUILD && pwd && time cmake -DCMAKE_BUILD_TYPE=${BUILDTYPE} -DCMAKE_CXX_FLAGS="-Werror -Wall" -DFORTRAN=1 -DMPI=0 -DPPIDD=0 $OLDPWD && time cmake --build . -- -j2  && (time ctest || ctest -V)
build111:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:latest
  #  tags:
  #    - linux-farm
  only:
    - merge_requests
  except:
    - tags
  timeout: 60m
  script:
    - export MPIPROCS=2
    - BUILDTYPE=Release
    - BUILD=build/FORTRAN=1/MPI=1/PPIDD=1 ; mkdir -p $BUILD && cd $BUILD && pwd && time cmake -DCMAKE_BUILD_TYPE=${BUILDTYPE} -DCMAKE_CXX_FLAGS="-Wall" -DFORTRAN=1 -DMPI=1 -DPPIDD=1 $OLDPWD && time cmake --build . -- -j2 && (time ctest || ctest -V)
build1110:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:latest
  #  tags:
  #    - linux-farm
  only:
    - merge_requests
  except:
    - tags
  timeout: 60m
  script:
    - export MPIPROCS=2
    - BUILDTYPE=Release
    - BUILD=build/FORTRAN=1/MPI=1/PPIDD=1/HDF5=0 ; mkdir -p $BUILD && cd $BUILD && pwd && time cmake -DCMAKE_BUILD_TYPE=${BUILDTYPE} -DCMAKE_CXX_FLAGS="-Wall" -DFORTRAN=1 -DMPI=1 -DPPIDD=1 -DLINEARALGEBRA_ARRAY_HDF5=OFF $OLDPWD && time cmake --build . -- -j2 && (time ctest || ctest -V)
build000:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:latest
  #  tags:
  #    - linux-farm
  only:
    - merge_requests
  except:
    - tags
  timeout: 60m
  script:
    - BUILDTYPE=Release
    - BUILD=build/FORTRAN=0/MPI=0/PPIDD=0 ; mkdir -p $BUILD && cd $BUILD && pwd && time cmake -DCMAKE_BUILD_TYPE=${BUILDTYPE}  -DCMAKE_CXX_FLAGS="-Werror -Wall" -DFORTRAN=0 -DMPI=0 -DPPIDD=0 $OLDPWD && time cmake --build . -- -j2 && (time ctest || ctest -V)
build010:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:latest
  #  tags:
  #    - linux-farm
  only:
    - merge_requests
  except:
    - tags
  timeout: 60m
  script:
    - export MPIPROCS=2
    - BUILDTYPE=Release
    - BUILD=build/FORTRAN=0/MPI=1/PPIDD=0 ; mkdir -p $BUILD && cd $BUILD && pwd && time cmake -DCMAKE_BUILD_TYPE=${BUILDTYPE} -DCMAKE_CXX_FLAGS="-Werror -Wall" -DFORTRAN=0 -DMPI=1 -DPPIDD=0 $OLDPWD && time cmake --build . -- -j2 && (time ctest || ctest -V)
build011:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:latest
  #  tags:
  #    - linux-farm
  only:
    - merge_requests
  timeout: 60m
  script:
    - export MPIPROCS=2
    - BUILDTYPE=Release
    - BUILD=build/FORTRAN=0/MPI=1/PPIDD=1 ; mkdir -p $BUILD && cd $BUILD && pwd && time cmake -DCMAKE_BUILD_TYPE=${BUILDTYPE} -DFORTRAN=0 -DMPI=1 -DPPIDD=1 $OLDPWD && time cmake --build . -j2 && (time ctest || ctest -V)
clang110:
  stage: test
  image: ${CI_REGISTRY_IMAGE}:latest
  #  tags:
  #    - linux-farm
  only:
    - merge_requests
  except:
    - tags
  timeout: 60m
  script:
    - export MPIPROCS=2
    - BUILDTYPE=Release
    - BUILD=build-clang/FORTRAN=1/MPI=1/PPIDD=0 ; mkdir -p $BUILD && cd $BUILD && pwd && CXX=clang++ cmake -DCMAKE_BUILD_TYPE=${BUILDTYPE} -DFORTRAN=0 -DMPI=1 -DPPIDD=1 $OLDPWD && time cmake --build . -j2 && (time ctest || ctest -V)
pages:
  stage: deploy
  image: ${CI_REGISTRY_IMAGE}:latest
  only:
    - tags
  script:
    - PUBLIC=$PWD/public
    - mkdir -p $PUBLIC
    - BUILD=$PWD/cmake-build
    - PROJECT_NAME=LinearAlgebra
    - mkdir -p $BUILD && cd $BUILD && time cmake -DFORTRAN=1 -DMPI=1 -DPPIDD=0 $OLDPWD && time cmake --build . --target ${PROJECT_NAME}-doc -j
    - mkdir -p $BUILD/docs/$PROJECT_NAME/html/DoxygenTagFiles && cp $BUILD/docs/$PROJECT_NAME/$PROJECT_NAME.tag $BUILD/docs/$PROJECT_NAME/html/DoxygenTagFiles
    - . $BUILD/project_version.sh ; rsync -a --delete $BUILD/docs/*/html/ $PUBLIC/${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    - rm -f  $PUBLIC/${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}/${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    - git fetch --tags
    - if [ $(git describe --tags --abbrev=0 --always HEAD) = $(git describe --tags --abbrev=0 --always origin/master) ]; then cd $PUBLIC; rm -f latest; ln -s ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR} latest ; rm -f ./index.html; cd ..; fi
    - echo '<head><meta http-equiv="refresh" content="0; URL=latest"></head>' > $PUBLIC/index.html
  artifacts:
    paths:
      - public

